controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 0.15

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: False

      # Kinematics / sampling
      min_vel_x: 0.0
      max_vel_x: 1.0
      max_vel_theta: 1.5
      acc_lim_x: 2.0
      acc_lim_theta: 3.0
      vx_samples: 20
      vtheta_samples: 20
      sim_time: 2.0

      # DWB critics (valid names)
      critics: ["ObstacleFootprint","GoalAlign","PathAlign","PathDist","GoalDist","RotateToGoal"]
      ObstacleFootprint.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

collision_monitor:
  ros__parameters:
    use_sim_time: True
    base_frame_id: base_link
    odom_frame_id: odom
    transform_tolerance: 0.2

    # Velocity topics (fits your graph)
    cmd_vel_in:  cmd_vel_nav
    cmd_vel_out: cmd_vel

    # Required sensor config
    observation_sources: ["scan"]
    scan:
      type: scan
      topic: husky/base_link/planar_laser
      timeout: 0.5

    # Conservative safety distances (tune later)
    slowdown_distance: 0.7
    stop_distance: 0.4
    slowdown_ratio: 0.5
